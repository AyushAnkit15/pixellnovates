/* eslint-disable react/prop-types */
/* eslint-disable no-unused-vars */
//"http://localhost:8080/api/v1/post
import React, { useEffect, useState } from 'react';

//const jose = new URL('../assets/' , import.meta.url).href

import { motion  ,AnimatePresence ,useTransform , useScroll , useSpring } from 'framer-motion';

import Card from '../components/RealCard';
import FormField from '../components/FormField';
import Loader from '../components/Loader';

//import classes from '../css/bt.css'

//import Search from '../components/Search';
import Montserrat from  '../Montserrat-Bold.ttf'

import { slideAnimation ,headContainerAnimation , fadeAnimation , headTextAnimation , headContentAnimation , transition  ,DrawOutlineButton } from '../components/Motion';


const Home = () => {

  const { scrollYProgress } = useScroll();
  
  const scaleX = useSpring(scrollYProgress);

  const background = useTransform(
    scrollYProgress,
    [0, 1],
    ["rgb(86, 1, 245)", "rgb(1, 245, 13)"]
  );


  const RenderCards = ({ data, title }) => {
    if (data?.length > 0) {
      return (
        data.map((post) => <Card key={post._id} {...post} />)
      );
    }
  
    return (
      <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
    );
  };
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState('');
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch('https://pixellnovates.onrender.com/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };

  return (
    <AnimatePresence className="max-w-7xl mx-auto">
      < motion.div  className ='home' {...slideAnimation('left')}>
      
    

        <h1 className="font-extrabold text-[#222328] text-[32px]">GALLERY </h1>
        <p className="mt-2 text-[#666e75] text-[14px] font-bold max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by PIXELNNOVATE</p>
      </motion.div>

      <motion.div className="mt-16" {...headContentAnimation}>
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
        
      </motion.div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for <span className="text-[#222328]">{searchText}</span>:
              </h2>
            )}
            <motion.div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3" >
              {searchText ? (
                <RenderCards
                style={{
                  maxWidth: "700px",
                  margin: "auto",
                  padding: "1.2rem",
                }}
                  data={searchedResults}
                  title="No Search Results Found"
                />
              ) : (
                <RenderCards
                  data={allPosts}
                  title="No Posts Yet"
                />
              )}
            </motion.div>
          </>
        )}
      </div>
    </AnimatePresence>
  );
};

export default Home;